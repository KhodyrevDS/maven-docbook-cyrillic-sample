<?xml version="1.0" encoding="utf-8"?>
<article version="5.0"
		 xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:mml="http://www.w3.org/1998/Math/MathML"
         xmlns:htm="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="
	  http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
		>

	<info>
		<title>Заголовок книги</title>
		<author>
			<personname>
				<firstname>Валерий</firstname>
				<surname>Вырва</surname>
			</personname>
		</author>

		<pubdate>2014.02.17</pubdate>
	</info>

	<section version="5.0" xml:id="introduction">
		<title>Введение</title>

		<para>Параграф введения.</para>

		<para>Второй параграф.</para>
	</section>

	<section>
		<title>Глава</title>

		<para>Текст главы.</para>

		<section>
			<title>Подглава</title>

			<para>Текст подглавы.</para>
		</section>
	</section>

	<section>
		<title>Проверка возможностей</title>
		<para>Эта глава будет содержать проверку работы раличных возможностей DocBook.</para>

		<section>
			<title>Не нумерованные списки</title>
			<itemizedlist>
				<title>Название списка</title>
				<listitem>
					<para>Элемент 1</para>
				</listitem>
				<listitem>
					<para>Элемент 2</para>
				</listitem>
			</itemizedlist>
		</section>

		<section>
			<title>Нумерованные списки</title>
			<orderedlist>
				<title>Название списка</title>
				<listitem>
					<para>Элемент 1</para>
				</listitem>
				<listitem>
					<para>Элемент 2</para>
				</listitem>
			</orderedlist>
		</section>

		<section>
			<title>Вложенные списки</title>
			<orderedlist>
				<listitem>
					<para>Элемент 1</para>
					<itemizedlist>
						<listitem>
							<para>Подэлемент 1</para>
						</listitem>
						<listitem>
							<para>Подэлемент 2</para>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<para>Элемент 2</para>
					<itemizedlist>
						<listitem>
							<para>Подэлемент 1</para>
						</listitem>
						<listitem>
							<para>Подэлемент 2</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</orderedlist>
		</section>

		<!--todo Ссылки-->

		<section>
			<title>Встраивание изображений</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/wikipedia.png" contentwidth="4in" contentdepth="3in" align="center"/>
				</imageobject>
			</mediaobject>
		</section>

		<section>
			<title>Таблицы</title>

			<table>
				<title>Примерный суточный набор продуктов (в граммах) на 2 000 ккал для здорового ребёнка</title>
				<tgroup cols="6">
					<thead>
						<row>
							<entry>Наименование продукта</entry>
							<entry>Количество, г</entry>
							<entry>Белки, г</entry>
							<entry>Жиры, г</entry>
							<entry>Углеводы, г</entry>
							<entry>Калорийность, ккал</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>Хлеб пшеничный</entry>
							<entry>110,0</entry>
							<entry>7,81</entry>
							<entry>1,21</entry>
							<entry>51,04</entry>
							<entry>251,9</entry>
						</row>
						<row>
							<entry>Хлеб ржаной</entry>
							<entry>60,0</entry>
							<entry>3,0</entry>
							<entry>0,6</entry>
							<entry>25,0</entry>
							<entry>122,4</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</section>

		<section>
			<title>Формулы</title>

			<section>
				<title>Простые формулы</title>
				<equation><title>Fermat's Last Theorem</title>
					<mathphrase>x<superscript>n</superscript> + y<superscript>n</superscript> = z<superscript>n</superscript>
						? n ? 2</mathphrase>
				</equation>
			</section>

			<!--todo MathML-->
<!--
			<section>
				<title>MathML</title>
				<informalequation>
					<mml:math>
						<mml:msup>
							<mml:mi>x</mml:mi>
							<mml:mn>3</mml:mn>
						</mml:msup>
					</mml:math>
				</informalequation>
			</section>
-->
		</section>

		<section>
			<title>Подсветка синтаксиса</title>
			<section>
				<title>Java</title>
				<programlisting language="java">
public void test_lucene_lengthnorm() {
	// default equal
	byte a = SmallFloat.floatToByte315(((float)(1.0 / Math.sqrt(4.0))));
	byte b = SmallFloat.floatToByte315(((float)(1.0 / Math.sqrt(3.0))));
	assertEquals(a, b);

	// change to not equal
	a = SmallFloat.floatToByte315(((float)(1.0 / (4.0 * 4.0))));
	b = SmallFloat.floatToByte315(((float)(1.0 / (5.0 * 5.0))));
	assertEquals(a, b);
}
				</programlisting>
			</section>
		</section>

		<section>
			<title>Подсветка синтаксиса большого кода</title>
			<section>
				<title>Java</title>
				<programlisting language="java"><![CDATA[
/**
 *
 */
package com.plxue.interview.algorithm.sort;

import java.util.Arrays;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * // @author matrix
 */
public class HeapSort {
	private static Logger LOG = LoggerFactory.getLogger(HeapSort.class);

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		int[] data = new int[] { 40, 55, 73, 12, 98, 27 };
		buildMaxHeap(data);

		for (int i = data.length - 1; i >= 0; i--) {
			LOG.debug(String.format("top:%d", data[0]));
			int tmp = data[0];
			data[0] = data[i];
			data[i] = tmp;
			maxHeapify(data, i, 0);
		}

		LOG.info(String.format("result:%s", Arrays.toString(data)));
	}

	private static void buildMaxHeap(int[] data) {
		int lastParentIndex = (data.length - 1) >> 1;
		for (int index = lastParentIndex; index >= 0; index--)
			maxHeapify(data, data.length, index);
	}

	/**
	 * if current node less than child then swap them.
	 *
	 * @param data
	 * @param heapSize
	 * @param index
	 */
	private static void maxHeapify(int[] data, int heapSize, int index) {
		int left = getLeftChildIndex(index);
		int right = getRightChildIndex(index);

		int largest = index;
		if (left < heapSize && data[left] > data[largest])
			largest = left;
		if (right < heapSize && data[right] > data[largest])
			largest = right;

		if (largest != index) {
			int tmp = data[index];
			data[index] = data[largest];
			data[largest] = tmp;
			// after swap, current node 'data[largest]'
			// may not be the max node.
			maxHeapify(data, heapSize, largest);
		}
	}

	/**
	 * get left child's index
	 *
	 * @param index
	 * @return
	 */
	private static int getLeftChildIndex(int index) {
		return (index << 1) + 1;
	}

	/**
	 * get right child's index
	 *
	 * @param index
	 * @return
	 */
	private static int getRightChildIndex(int index) {
		return (index << 1) + 2;
	}

}
				]]></programlisting>
			</section>
		</section>

	</section>

	<bibliography>
		<title>Использованные ссылки</title>
		<bibliomixed xml:id="BI_001">
			<title>Русская документация по DocBook</title>
			<author>
				<personname>Apache</personname>
			</author>
			<editor>
				<personname>Автор</personname>
			</editor>
			<edition>r0.20.2</edition>
			<bibliosource class="uri">
				<link xlink:href="http://lib.custis.ru/SGML_Docbook">
					http://lib.custis.ru/SGML_Docbook
				</link>
			</bibliosource>
		</bibliomixed>
	</bibliography>
</article>
